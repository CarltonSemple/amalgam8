daemon off;
user  nginx;
worker_processes  1;

error_log  /tmp/error.log notice;
pid        /tmp/nginx.pid;


events {
    worker_connections  1024;
}

http {

    lua_package_path "/usr/local/openresty/lualib/?.lua;/home/vagrant/sandbox/src/github.com/amalgam8/sidecar/dynamicupdate/lua/?.lua;";

    lua_shared_dict upstreams_dict  5m;
    lua_shared_dict services_dict  1m;
    lua_shared_dict locks_dict 1m;

    init_by_lua_block {
        require("resty.core")
        version_routing = require("version_routing")
        require("amalgam8").init("upstreams_dict", "services_dict", "locks_dict")
    }

    server {
        listen 8080;
	server_name myname;

        location / {
            return 404;
        }

        # amalgam8 control API
        location /a8-admin {
            content_by_lua_block {
                require("amalgam8").handle("upstreams_dict", "services_dict", "locks_dict")
            }
        }
    }

    server {
        listen 8888;
        location ~ ^/(?<service_name>.*?)/(?<reqpath>.*)$ {
	       set $a8proxy_upstream nil;
	       access_by_lua_block {
                local default_version, version_selectors = require("amalgam8").versioninfo("upstreams_dict", "services_dict", "locks_dict");
		if not default_version and not version_selectors then
	           ngx.exit(404)
	        end
	        ngx.var.a8proxy_upstream = version_routing.get_target(ngx.var.service_name, default_version, version_selectors);
	       }
           proxy_pass http://managed-upstreams/$reqpath;
        }
    }

    upstream managed-upstreams {
        server 127.0.0.1:1;
        balancer_by_lua_block {
            require("amalgam8").balance("upstreams_dict", "services_dict", "locks_dict")
        }
        keepalive 64;
    }

    ##########These are test apps###########
    #helloworld_v1 - instance 1
    server {
    	   listen 9091;
	   location / {
	     echo "Helloworld v1 - instance 1";
	   }
    }

    #helloworld_v1 - instance 2
    server {
    	   listen 9092;
	   location / {
	     echo "Helloworld v1 - instance 2";
	   }
    }

    #helloworld_v2 - instance 1
    server {
    	   listen 9093;
	   location / {
	     echo "Helloworld v2 - instance 1";
	   }
    }

    #helloworld_v2 - instance 2
    server {
    	   listen 9094;
	   location / {
	     echo "Helloworld v2 - instance 2";
	   }
    }

    #endworld_v1 - instance 1
    server {
    	   listen 9095;
	   location / {
	     echo "End of world v1 - instance 1";
	   }
    }
    ##############################

    log_format  main  '{'
                      '"upstream_addr": "$upstream_addr", '
                      '"remote_addr": "$remote_addr", '
                      '"remote_user": "$remote_user", '
                      '"@timestamp": "$time_iso8601", '
                      '"request": "$request", '
                      '"status": "$status", '
                      '"http_user_agent": "$http_user_agent",'
		      '"cookie_gremlin": "$cookie_gremlin",'
                      '"upstream_response_time": "$upstream_response_time"'
                      '}';

    access_log  /tmp/access.log  main;
    error_log /tmp/error.log notice;
}
