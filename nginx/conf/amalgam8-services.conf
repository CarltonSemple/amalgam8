#Microservice-related configuration

##DO not edit sections that are enclosed within "DO NOT MODIFY"

##############LOGGING#####################
## Logging requests that transit via the sidecar, as JSON entries.
## If you plan to use the gremlin framework for resilience testing,
## the following fields are a MUST in the JSON log entry:
##  status
##  timestamp_in_ms
##  request_time
##  upstream_response_time
##  gremlin_header_name
##  gremlin_header_val
##  src
##  dst

## You can add any other additional fields to this log entry. Nginx's standard
## variable names can be found in http://nginx.org/en/docs/http/ngx_http_log_module.html

log_format  a8log  '{'
                ## DO NOT MODIFY ######
                '"status":"$status",'
                '"timestamp_in_ms":"$msec",'
                '"request_time":"$request_time",'
                '"upstream_response_time":"$upstream_response_time",'
                '"gremlin_header_name":"$gremlin_header_name",'
                '"gremlin_header_val":"$gremlin_header_val",'
                '"src": "$source_service",'
                '"dst": "$a8proxy_upstream",'
                ###########
                ###Add any additional fields here####
                '"message":"$request $status",'
                '"module":"NGINX",'
                '"upstream_addr":"$upstream_addr",'
                '"remote_addr":"$remote_addr",'
                '"request":"$request",'
                '"http_referer":"$http_referer",'
                '"http_user_agent": "$http_user_agent",'
                '"http_x_forwarded_for":"$http_x_forwarded_for"'
               '}';
################END LOGGING###########################


######DO NOT MODIFY#############
map $http_upgrade $connection_upgrade {
  default '';
  websocket upgrade;
}

upstream a8_upstreams {
    server 127.0.0.1:1;
    balancer_by_lua_block {
       amalgam8:balance()
    }
   keepalive 64;
}

################################

### Application proxy
server {
       listen 6379; ##Can be changed to any other port

       location ~ ^/(?<service_name>.*?)/(?<reqpath>.*) {
         set_by_lua_block $source_service { return amalgam8:get_source_service() }
       	 set $a8proxy_upstream nil;
         set $gremlin_header_name nil;
         set $gremlin_header_val nil;
         set $service_type 'http';
         access_by_lua_block {
            local stype, default_version, version_selectors = amalgam8:get_service_metadata();
            if not default_version and not version_selectors then
               ngx.exit(404)
            end
            ngx.var.service_type = stype
            ngx.var.a8proxy_upstream = version_routing.get_target(ngx.var.service_name, default_version, version_selectors)
            fault_injection.inject_faults(ngx.var.a8proxy_upstream, amalgam8.faults_dict)
         }
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;
         ## Add proxy ssl vertification directives here.
         proxy_pass $service_type://a8_upstreams/$reqpath$is_args$args;
       }
       access_log /var/log/nginx/a8_access.log a8log;
}
