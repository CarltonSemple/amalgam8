lua_package_path "/opt/a8_lualib/?.lua;/usr/local/openresty/lualib/?.lua;";

lua_shared_dict upstreams_dict  5m;
lua_shared_dict faults_dict  5m;
lua_shared_dict services_dict  1m;

init_by_lua_block {
   require("resty.core")
   Amalgam8=require("amalgam8")
   amalgam8 = Amalgam8:new("upstreams_dict", "services_dict", "faults_dict")
   version_routing = require("version_routing")
   fault_injection = require("fault_injection")
}

### AMALGAM8 admin API
server {
   listen 5813;
   server_name a8_admin;
   location / {
      return 404;
   }

   location /a8-admin {
     content_by_lua_block {
         amalgam8:updateConfig()
     }
   }
}

### Application proxy
server {
       listen 6379;
       server_name __SERVICE_NAME__;

       location ~ ^/(?<service_name>.*?)/(?<reqpath>.*)$ {
       	 set $a8proxy_upstream nil;
         access_by_lua_block {
            local default_version, version_selectors = amalgam8:get_version_rules();
            if not default_version and not version_selectors then
               ngx.exit(404)
            end
            ngx.var.a8proxy_upstream = version_routing.get_target(ngx.var.service_name, default_version, version_selectors);
            fault_injection.inject_faults(ngx.var.a8proxy_upstream, amalgam8.faults_dict)
         }
         proxy_pass http://a8_upstreams/$reqpath;
       }
}

upstream a8_upstreams {
    server 127.0.0.1:1;
    balancer_by_lua_block {
       amalgam8:balance()
    }
   keepalive 64;
}
