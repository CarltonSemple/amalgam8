#
# Copyright 2016 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

# This Vagrantfile sets up a Ubuntu based sandbox environment for running the Amalgam8 control plane and the demo applications

# -*- mode: ruby -*-
# vi: set ft=ruby :

$script = <<SCRIPT
set -x

apt-get update -qq
apt-get install -q -y curl python-pip jq git

# Install and run Docker
echo deb http://get.docker.com/ubuntu docker main > /etc/apt/sources.list.d/docker.list
apt-key adv --keyserver pgp.mit.edu --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
apt-get update
sudo wget -qO- https://get.docker.com/ | sh

sudo usermod -a -G docker vagrant # Add vagrant user to the docker group

# Install docker-compose
sudo curl -L https://github.com/docker/compose/releases/download/1.5.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

git clone https://github.com/amalgam8/amalgam8 /home/vagrant/amalgam8
chown vagrant:vagrant /home/vagrant/amalgam8

# Install Amalgam8 CLI
sudo pip install git+https://github.com/amalgam8/amalgam8/a8ctl

SCRIPT

Vagrant.configure('2') do |config|
  config.vm.box = "ubuntu/trusty64"

  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ['modifyvm', :id, '--memory', '4096']
    vb.cpus = 2
  end

  # Port mappings for various services inside the VM
  ####A8 Console
  config.vm.network "forwarded_port", guest: 31000, host: 31000
  ####Controller
  config.vm.network "forwarded_port", guest: 31200, host: 31200
  ####Registry
  config.vm.network "forwarded_port", guest: 31300, host: 31300
  ####Gateway
  config.vm.network "forwarded_port", guest: 32000, host: 32000
  ####Elasticsearch
  config.vm.network "forwarded_port", guest: 30200, host: 30200
  ####Kibana
  config.vm.network "forwarded_port", guest: 30500, host: 30500
  ####Weave Scope
  config.vm.network "forwarded_port", guest: 30040, host: 30040

  config.vm.provision :shell, inline: $script
end
